name: Packagist to BlueSky CRON

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/10 * * * *'
  # Allow manual triggering for testing
  workflow_dispatch:

jobs:
  post-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
      # Note: Variables are managed through the actions scope

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, zip, curl
          coverage: none
      
      - name: Validate composer.json and composer.lock
        run: composer validate --strict
      
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
      
      - name: Create .env file
        run: |
          echo "BLUESKY_USERNAME=${{ secrets.BLUESKY_USERNAME }}" > .env
          echo "BLUESKY_PASSWORD=${{ secrets.BLUESKY_PASSWORD }}" >> .env
          echo "PACKAGIST_RSS_URL=https://packagist.org/feeds/releases.rss" >> .env
          echo "LOG_LEVEL=info" >> .env
          echo "LAST_ITEM_PUBDATE=${{ vars.LAST_ITEM_PUBDATE || '1' }}" >> .env
          echo "GITHUB_REPOSITORY=${{ secrets.GITHUB_REPOSITORY }}" >> .env
          echo "GITHUB_REPOSITORY_OWNER=${{ secrets.GITHUB_REPOSITORY_OWNER }}" >> .env
          echo "GITHUB_REPOSITORY_NAME=${{ secrets.GITHUB_REPOSITORY_NAME }}" >> .env

      - name: Run post-packages command
        run: php bin/console app:post-packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN_FOR_UPDATE_REPO_VAR: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
